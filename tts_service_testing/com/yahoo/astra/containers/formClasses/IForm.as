/*
Copyright (c) 2009 Yahoo! Inc.  All rights reserved.  
The copyrights embodied in the content of this file are licensed under the BSD (revised) open source license
*/
package com.yahoo.astra.containers.formClasses {	/**	 * Methods and properties expected to be defined by Form Classes. 	 * 	 * @see com.yahoo.astra.containers.formClasses.FormEventObserver	 *  	 * @author kayoh 	 */	public interface IForm {		//--------------------------------------		//  Methods		//--------------------------------------		/**		 * Add formItems to subscribe <code>FormEventObserver</code>. Returns <code>IFormEventObserver</code> to force IForm instance to subscribe this observer class. 		 * 		 * @param formEventObserver <code>FormEventObserver</code> to register.		 * @return IFormEventObserver Return type of <code>formEventObserver.subscribeObserver(IForm)</code>.		 */		function subscribeObserver(formEventObserver : IFormEventObserver) : IFormEventObserver;		/** 		 * Update FormLayoutEvents and properties. 		 * 		 * @param target String <code>FormLayoutEvent</code> type.		 * @param value Object contains value associated <code>FormLayoutEvent</code>		 */		function update(target : String, value : Object = null) : void;	}}