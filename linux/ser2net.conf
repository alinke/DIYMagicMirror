#
# This is the configuration file for ser2net.  It has the following format:
#  <TCP port>:<state>:<timeout>:<device>:<options>
#     TCP port
#            Name   or  number of the TCP/IP port to accept con­
#            nections from for this device.  A port number may
#            be of the form [host,]port, such as 127.0.0.1,2000
#            or localhost,2000.  If this is specified, it will
#            only bind to the IP address specified. Otherwise
#	     it will bind to all the ports on the machine.
#
#     state  Either raw or rawlp or telnet or off.  off disables
#            the  port  from  accepting  connections.  It can be
#            turned on later from the control port.  raw enables
#            the port and  transfers  all data as-is between the
#            port  and  the long.  rawlp  enables  the port  and
#            transfers  all input data to device, device is open
#            without  any  termios  setting.  It  allow  to  use
#            /dev/lpX  devices  and  printers connected to them.
#            telnet enables the port and runs the telnet  proto-
#            col  on the port to set up telnet parameters.  This
#            is most useful for using telnet.
#
#     device The  name  of  the  device   to  connect  to.  This
#            must be in the form of /dev/<device>.
#
#     options
#            Sets  operational  parameters  for the serial port.
#            Options 300, 1200, 2400, 4800, 9600, 19200,  38400,
#            115200 set the various baud rates.  EVEN, ODD, NONE
#            set the parity.  1STOPBIT, 2STOPBITS set the number
#            of  stop bits.  7DATABITS, 8DATABITS set the number
#            of data bits.  [-]XONXOFF turns on (- off) XON/XOFF
#            support.  [-]RTSCTS  turns on (- off) hardware flow
#            control and [-]LOCAL turns off (- on) monitoring of
#            the modem lines.  The "remctl" option allow remote
#	     control (ala RFC 2217) of serial-port configuration.
#            A banner name may also be specified, that banner will
#            be printed for the line.  If no banner is given, then
#            no banner is printed.
#
# or...

#  BANNER:<banner name>:banner
#    This will create a banner, if the banner name is given in the
#    options of a line, that banner will be printed.  This takes the
#    standard "C" \x characters (\r is carraige return, \n is newline,
#    etc.).  It also accepts \d, which prints the device name,
#    \p, which prints the TCP port number, and \s, which prints the
#    serial port parameters (eg 9600N81) of the given connection.
#    Banners can span lines if the last character on a line is '\'.
#    Note that you *must* use \r\n to start a new line.
#
# Note that the same device can be listed multiple times under different
# ports, this allows the same serial port to have both telnet and raw
# protocols.

# The original config file shipped with the upstream sources can be
# found in /usr/share/doc/ser2net/examples

#BANNER:banner:\r\nser2net port \p device \d [\s] (Debian GNU/Linux)\r\n\r\n

127.0.0.1,5333:raw:300:/dev/ttyUSB0:115200 8DATABITS NONE 1STOPBIT 
#127.0.0.1,5332:raw:300:/dev/ttyUSB1:9600 8DATABITS NONE 1STOPBIT 
#127.0.0.1,5331:rawlp:600:/dev/ttyS1:57600 8DATABITS NONE 1STOPBIT banner
#2000:telnet:600:/dev/ttyS0:9600 8DATABITS NONE 1STOPBIT banner
#2001:telnet:600:/dev/ttyS1:9600 8DATABITS NONE 1STOPBIT banner
#3000:telnet:600:/dev/ttyS0:19200 8DATABITS NONE 1STOPBIT banner
#3001:telnet:600:/dev/ttyS1:19200 8DATABITS NONE 1STOPBIT banner
